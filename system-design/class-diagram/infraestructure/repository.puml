@startuml
package repository {

    class BookRepository {
        - connectionString: string
        + Delete(Guid id): Task<bool>
        + GetAll(): Task<IEnumerable<Book>>
        + GetBookByISBN(long isbn): Task<Book?>
        + GetBooksByAuthor(string author, int offset, int limit): Task<IEnumerable<Book>>
        + GetBooksByGenre(string genre, int offset, int limit): Task<IEnumerable<Book>>
        + GetBooksByTitle(string title, int offset, int limit): Task<IEnumerable<Book>>
        + GetById(Guid id): Task<Book?>
        + Save(Book entity): Task<bool>
        + Update(Book entity): Task<bool>
    }

    class BorrowRepository {
        - connectionString: string
        + Delete(Guid id): Task<bool>
        + GetAll(): Task<IEnumerable<Borrow>>
        + GetBorrowsByBook(Guid bookId, int offset, int limit): Task<IEnumerable<Borrow>>
        + GetBorrowsByBorrowDate(DateTime borrowDate, int offset, int limit): Task<IEnumerable<Borrow>>
        + GetBorrowsByDueDate(DateTime dueDate, int offset, int limit): Task<IEnumerable<Borrow>>
        + GetBorrowsByPatron(Guid patronId, int offset, int limit): Task<IEnumerable<Borrow>>
        + GetBorrowsByStatus(BorrowStatus status, int offset, int limit): Task<IEnumerable<Borrow>>
        + GetById(Guid id): Task<Borrow?>
        + Save(Borrow entity): Task<bool>
        + Update(Borrow entity): Task<bool>
    }

    class PatronRepository {
        - connectionString: string
        + Delete(Guid id): Task<bool>
        + GetAll(): Task<IEnumerable<Patron>>
        + GetById(Guid id): Task<Patron?>
        + GetPatronByMembershipAsync(long membershipNumber): Task<Patron?>
        + GetPatronsByContactDetailsAsync(long contactDetails, int offset, int limit): Task<IEnumerable<Patron?>>
        + GetPatronsByNameAsync(string name, int offset, int limit): Task<IEnumerable<Patron>>
        + Save(Patron entity): Task<bool>
        + Update(Patron entity): Task<bool>
    }

    IBookRepository <|.. BookRepository
    IBorrowRepository <|.. BorrowRepository
    IPatronRepository <|.. PatronRepository
}
@enduml
