@startuml
package presentation {
    class ReportsOptions {
        - borrowStatusReport: BorrowStatusReport
        - patronBorrowReport: PatronBorrowReport
        + ReportInitialOptions(): Task
        - ReportBooksCurrentlyBorrowed(): Task
        - ReportBooksOverdue(): Task
        - ReportPatronBorrowed(): Task
    }

    class Header {
        + {static} AppHeader(): void
    }

    class PatronOptions {
        - patronRepository: IPatronRepository
        + PatronInitialOptions(): Task
        - RegisterNewPatron(): Task
        - DeletePatron(): Task
        - SearchPatron(): Task
        - SearchPatronsByMembershipNumber(): Task
        - PaginatedSearchByName(): Task
    }

    class BorrowOptions {
        + {static} BorrowInitialOptions(): void
        - {static} RegisterNewBorrow(BorrowRepositoryImplementation repository): void
    }

    class BookOptions {
        - bookRepository: IBookRepository
        + BookInitialOptions(): Task
        - RegisterNewBook(): Task
        - DeleteBook(): Task
        - SearchBook(): Task
        - PaginatedSearchByTitle(): Task
        - PaginatedSearchByAuthor(): Task
        - SearchByIsbn(): Task
    }

    class BorrowConsoleRenderer {
        + GetPatronId(): Guid
        + GetBookId(): Guid
        + DisplayBorrowDetails(Borrow borrow): void
        + ConfirmBorrow(): bool
    }

    interface IBorrowConsoleRenderer {
        + GetPatronId(): Guid
        + GetBookId(): Guid
        + DisplayBorrowDetails(Borrow borrow): void
        + ConfirmBorrow(): bool
    }
    IBorrowConsoleRenderer <.. BorrowConsoleRenderer

    class MainMenu {
        - bookOptions: BookOptions
        - patronOptions: PatronOptions
        - borrowOptions: BorrowOptions
        - reportsOptions: ReportsOptions
        + InitialMainMenu(): Task
        + InitializeApp(): Task
        + {static} void ShowProgressBar()
    }
    MainMenu o-- BorrowOptions
    MainMenu o-- BookOptions
    MainMenu o-- PatronOptions
    MainMenu o-- ReportsOptions
}
@enduml
